{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PeopleLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeopleLink","person","slug","sex","name","to","cn","PeopleTable","people","useParams","selectedPersonRef","useRef","getPersonByName","find","useEffect","selectedPerson","current","scrollIntoView","block","behavior","window","scrollTo","top","map","motherName","fatherName","born","died","mother","undefined","father","ref","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","catch","finally","length","HomePage","linkClass","isActive","App","role","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6003c2f1.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useEffect, useRef } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PeopleLink } from './PeopleLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const selectedPersonRef = useRef<HTMLTableRowElement | null>(null);\n\n  function getPersonByName(name: string) {\n    return people.find((person) => person.name === name);\n  }\n\n  useEffect(() => {\n    const selectedPerson = people.find((person) => person.slug === slug);\n\n    if (selectedPersonRef.current && selectedPerson) {\n      selectedPersonRef.current.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, [slug, people]);\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person) => {\n            const {\n              motherName,\n              fatherName,\n              sex,\n              born,\n              died,\n            } = person;\n            const mother = motherName ? getPersonByName(motherName) : undefined;\n            const father = fatherName ? getPersonByName(fatherName) : undefined;\n\n            return (\n              <tr\n                key={person.slug}\n                data-cy=\"person\"\n                className={cn({\n                  'has-background-warning': person.slug === slug,\n                })}\n                ref={(ref) => {\n                  if (person.slug === slug) {\n                    selectedPersonRef.current = ref;\n                  }\n                }}\n              >\n                <td>\n                  <PeopleLink person={person} />\n                </td>\n                <td>{sex}</td>\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {(motherName\n                    && (mother ? <PeopleLink person={mother} /> : motherName))\n                    || '-'}\n                </td>\n                <td>\n                  {(fatherName\n                    && (father ? <PeopleLink person={father} /> : fatherName))\n                    || '-'}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n          {!isLoading && (\n            <>\n              {isLoadingError ? (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                  className=\"has-text-danger\"\n                >\n                  Something went wrong\n                </p>\n              ) : (\n                <>\n                  {people.length > 0 ? (\n                    <PeopleTable people={people} />\n                  ) : (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (<h1 className=\"title\">Home Page</h1>);\n};\n","import {\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\nconst linkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={linkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={linkClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            index\n            element={<HomePage />}\n          />\n          <Route path=\"people\">\n            <Route\n              path=\":slug?\"\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route\n            path=\"home\"\n            element={(\n              <Navigate\n                to=\"/\"\n                replace\n              />\n            )}\n          />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}